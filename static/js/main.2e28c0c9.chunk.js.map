{"version":3,"sources":["App.tsx","components/GoodCard.tsx","components/GoodList.tsx","index.tsx"],"names":["SortedFields","GoodCard","good","GoodList","goods","map","goodsFromServer","App","useState","SetByDanger","sortField","setsortField","reversed","setReversed","sortedGoods","preparedGoods","sort","good1","good2","SetById","SetByAlphabet","localeCompare","SetByLength","length","reverse","getSortedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAyBKA,E,0ECnBQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SFJpBI,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SASGN,K,aAAAA,E,yBAAAA,E,qBAAAA,E,sBAAAA,M,KA8BE,IAAMO,EAAgB,WAC3B,MAAkCC,mBAASR,EAAaS,aAAxD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EA1BR,SAAwBV,EAAxB,GAC4E,IAAxEM,EAAuE,EAAvEA,UAAWE,EAA4D,EAA5DA,SACPG,EAAa,YAAOX,GAa1B,OAXAW,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKV,EAAamB,QAClB,KAAKnB,EAAaoB,cAChB,OAAOH,EAAMI,cAAcH,GAC7B,KAAKlB,EAAasB,YAChB,OAAOL,EAAMM,OAASL,EAAMK,OAC9B,QAAS,OAAO,MAIhBX,EACKG,EAAcS,UAGhBT,EAQHU,CAAenB,EACf,CAAEI,YAAWE,aAWjB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaX,EAAaoB,gBACzCQ,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYnB,IAAcV,EAAaoB,gBAJ7C,iCASA,wBACEO,QAAS,kBAAMhB,EAAaX,EAAasB,cACzCM,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYnB,IAAcV,EAAasB,cAJ7C,4BASA,wBACEK,QA1BU,WAChBd,GAAaD,IA0BPgB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WA3EO,OA2EKjB,IAJlB,sBASEA,GAAYF,IAAcV,EAAaS,cACvC,wBACEkB,QAzCM,WACdd,GAAY,GACZF,EAAaX,EAAaS,cAwClBmB,KAAK,SACLF,UAAU,4BAHZ,sBASJ,cAAC,EAAD,CAAUtB,MAAOU,QG7GvBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e28c0c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const SetById = 'id';\n// const SetByAlphabet = 'alphabet';\n// const SetByLength = 'length';\nconst SetByReverse = true;\n// const SetByDanger = 'danger';\n\nenum SortedFields {\n  SetById = 'id',\n  SetByAlphabet = 'alphabet',\n  SetByLength = 'length',\n  SetByDanger = 'danger',\n\n}\n\nfunction getSortedGoods(goods: string[],\n  { sortField, reversed }: { sortField: SortedFields, reversed: boolean }) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SortedFields.SetById:\n      case SortedFields.SetByAlphabet:\n        return good1.localeCompare(good2);\n      case SortedFields.SetByLength:\n        return good1.length - good2.length;\n      default: return 0;\n    }\n  });\n\n  if (reversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setsortField] = useState(SortedFields.SetByDanger);\n  const [reversed, setReversed] = useState(false);\n\n  const sortedGoods\n    = getSortedGoods(goodsFromServer,\n      { sortField, reversed });\n\n  const onReset = () => {\n    setReversed(false);\n    setsortField(SortedFields.SetByDanger);\n  };\n\n  const onReverse = () => {\n    setReversed(!reversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setsortField(SortedFields.SetByAlphabet)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortedFields.SetByAlphabet })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setsortField(SortedFields.SetByLength)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortedFields.SetByLength })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={onReverse}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': reversed !== SetByReverse })}\n        >\n          Reverse\n        </button>\n\n        {(reversed || sortField !== SortedFields.SetByDanger) && (\n          <button\n            onClick={onReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={sortedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const GoodCard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { GoodCard } from './GoodCard';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}